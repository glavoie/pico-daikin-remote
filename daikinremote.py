from machine import Pin, PWM
import time
import _thread

#DUTY_ON = 16383 # 1/4
DUTY_ON = 21843 # 1/3
DUTY_OFF = 0

# In microseconds (us)
START = 280
BIT_MARK = 430
ZERO = 430
ONE = 1300
LEADER_SPACE = 25400
FRAME_START_HIGH = 3500
FRAME_START_LOW = 1730
GAP = 34950

pwm = PWM(Pin(13))

# Carrier frequency
pwm.freq(38000)

# COPIED MESSAGES

ON_23  = [['0x11', '0xda', '0x27', '0x00', '0xc5', '0x10', '0x00', '0xe7'], ['0x11', '0xda', '0x27', '0x00', '0x42', '0xb5', '0x2c', '0x35'], ['0x11', '0xda', '0x27', '0x00', '0x00', '0x39', '0x2e', '0x00', '0xa0', '0x00', '0x00', '0x06', '0x60', '0x00', '0x00', '0xc1', '0x00', '0x00', '0x40']]
OFF_23 = [['0x11', '0xda', '0x27', '0x00', '0xc5', '0x10', '0x00', '0xe7'], ['0x11', '0xda', '0x27', '0x00', '0x42', '0x9a', '0x2c', '0x1a'], ['0x11', '0xda', '0x27', '0x00', '0x00', '0x38', '0x2e', '0x00', '0xa0', '0x00', '0x00', '0x06', '0x60', '0x00', '0x00', '0xc1', '0x00', '0x00', '0x3f']]
FAN    = [['0x11', '0xda', '0x27', '0x00', '0xc5', '0x10', '0x00', '0xe7'], ['0x11', '0xda', '0x27', '0x00', '0x42', '0xb4', '0x2c', '0x34'], ['0x11', '0xda', '0x27', '0x00', '0x00', '0x69', '0x32', '0x00', '0xa0', '0x00', '0x00', '0x06', '0x60', '0x00', '0x00', '0xc1', '0x00', '0x00', '0x74']]

def send_code(code):
    # Sending PREAMBLE pulse
    # ... MAYBE... MAYBE NOT

    # Sending command
    for frame in code:
        send_signal(DUTY_ON, FRAME_START_HIGH)
        send_signal(DUTY_OFF, FRAME_START_LOW)
        send_signal(DUTY_ON, BIT_MARK)

        for byte in frame:
            h = int(byte, 16)
            for i in range(8):
                bit = h >> i & 1
                send_signal(DUTY_OFF, ONE if bit == 1 else ZERO)
                send_signal(DUTY_ON, BIT_MARK)
        
        send_signal(DUTY_OFF, GAP)


def send_signal(signal, length):
    pwm.duty_u16(signal)
    time.sleep_us(length)

    return length

def ac_on():
    send_code(FAN)
    print("Turned ON FAN")

def ac_off():
    send_code(OFF_23)
    print("Turned OFF")